{"version":3,"sources":["webpack:///./src/pages/tag.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Index","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_ref","posts","data","allMarkdownRemark","edges","a","createElement","className","filter","post","node","frontmatter","title","length","map","_ref2","key","id","to","path","date","excerpt"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,IAAAU,EAAAV,EAAAQ,EAAAC,GAAAE,EAAAX,EAAA,KAAAY,EAAAZ,EAAAQ,EAAAG,GAIe,SAASP,EAATS,GAEkB,IAChBC,EADgBD,EADDE,KAEAC,kBAAtBC,MACR,OACEV,EAAAW,EAAAC,cAAA,OAAKC,UAAU,cACZN,EACEO,OAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,IACpDC,IAAI,SAAAC,GAAoB,IAAXN,EAAWM,EAAjBL,KACN,OACEhB,EAAAW,EAAAC,cAAA,OAAKC,UAAU,oBAAoBS,IAAKP,EAAKQ,IAC3CvB,EAAAW,EAAAC,cAACP,EAAAM,EAAD,CAAQO,MAAK,cAAgBH,EAAKE,YAAYC,QAC9ClB,EAAAW,EAAAC,cAAA,UACEZ,EAAAW,EAAAC,cAACT,EAAAQ,EAAD,CAAMa,GAAIT,EAAKE,YAAYQ,MAAOV,EAAKE,YAAYC,QAErDlB,EAAAW,EAAAC,cAAA,UAAKG,EAAKE,YAAYS,MACtB1B,EAAAW,EAAAC,cAAA,SAAIG,EAAKY,aAOhB,IAAM7B,EAAS","file":"component---src-pages-tag-js-d73d47c304da18d66d5a.js","sourcesContent":["import React from \"react\"\nimport Link from \"gatsby-link\"\nimport Helmet from \"react-helmet\"\n\nexport default function Index({\n                                data,\n                              }) {\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <div className=\"blog-posts\">\n      {posts\n        .filter(post => post.node.frontmatter.title.length > 0)\n        .map(({ node: post }) => {\n          return (\n            <div className=\"blog-post-preview\" key={post.id}>\n              <Helmet title={`ChenX的小站 - ${post.frontmatter.title}`}/>\n              <h1>\n                <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n              </h1>\n              <h2>{post.frontmatter.date}</h2>\n              <p>{post.excerpt}</p>\n            </div>\n          )\n        })}\n    </div>\n  )\n}\nexport const pageQuery = graphql`\n query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n }\n`"],"sourceRoot":""}